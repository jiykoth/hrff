<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="feedbackDataSet" targetNamespace="http://tempuri.org/feedbackDataSet.xsd" xmlns:mstns="http://tempuri.org/feedbackDataSet.xsd" xmlns="http://tempuri.org/feedbackDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="localConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="localConnectionString (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.localConnectionString.ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="competenciesTableAdapter" GeneratorDataComponentClassName="competenciesTableAdapter" Name="competencies" UserDataComponentName="competenciesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="localConnectionString (Web.config)" DbObjectName="feedback.dbo.competencies" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[competencies] ([name]) VALUES (@name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, name FROM dbo.competencies</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="jobsTableAdapter" GeneratorDataComponentClassName="jobsTableAdapter" Name="jobs" UserDataComponentName="jobsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="localConnectionString (Web.config)" DbObjectName="feedback.dbo.jobs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[jobs] ([name], [employeeCount], [behaviorCount]) VALUES (@name, @employeeCount, @behaviorCount)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@employeeCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="employeeCount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@behaviorCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="behaviorCount" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, name, employeeCount, behaviorCount FROM dbo.jobs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="employeeCount" DataSetColumn="employeeCount" />
              <Mapping SourceColumn="behaviorCount" DataSetColumn="behaviorCount" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="feedbackDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="feedbackDataSet" msprop:Generator_UserDSName="feedbackDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="competencies" msprop:Generator_TableClassName="competenciesDataTable" msprop:Generator_TableVarName="tablecompetencies" msprop:Generator_TablePropName="competencies" msprop:Generator_RowDeletingName="competenciesRowDeleting" msprop:Generator_RowChangingName="competenciesRowChanging" msprop:Generator_RowEvHandlerName="competenciesRowChangeEventHandler" msprop:Generator_RowDeletedName="competenciesRowDeleted" msprop:Generator_UserTableName="competencies" msprop:Generator_RowChangedName="competenciesRowChanged" msprop:Generator_RowEvArgName="competenciesRowChangeEvent" msprop:Generator_RowClassName="competenciesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="jobs" msprop:Generator_TableClassName="jobsDataTable" msprop:Generator_TableVarName="tablejobs" msprop:Generator_TablePropName="jobs" msprop:Generator_RowDeletingName="jobsRowDeleting" msprop:Generator_RowChangingName="jobsRowChanging" msprop:Generator_RowEvHandlerName="jobsRowChangeEventHandler" msprop:Generator_RowDeletedName="jobsRowDeleted" msprop:Generator_UserTableName="jobs" msprop:Generator_RowChangedName="jobsRowChanged" msprop:Generator_RowEvArgName="jobsRowChangeEvent" msprop:Generator_RowClassName="jobsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="employeeCount" msprop:Generator_ColumnVarNameInTable="columnemployeeCount" msprop:Generator_ColumnPropNameInRow="employeeCount" msprop:Generator_ColumnPropNameInTable="employeeCountColumn" msprop:Generator_UserColumnName="employeeCount" type="xs:int" />
              <xs:element name="behaviorCount" msprop:Generator_ColumnVarNameInTable="columnbehaviorCount" msprop:Generator_ColumnPropNameInRow="behaviorCount" msprop:Generator_ColumnPropNameInTable="behaviorCountColumn" msprop:Generator_UserColumnName="behaviorCount" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>